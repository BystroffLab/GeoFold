!!====================================================================================
!! geofold_hbonds
!!====================================================================================
MODULE geofold_hbonds
 use geofold_global
 use geofold_pivots
 private
 public ::  geofold_hbonds_get, geofold_hbonds_read, geofold_hbonds_cleanup
 public ::  geofold_hbonds_disulfidepresent, geofold_hbonds_ssinseg
 CONTAINS
!!====================================================================================
! get_hbonds
! count the number of hbonds within intemediate f
!
  subroutine geofold_hbonds_get(f, hbonds)
    implicit none
    type(intermediate), POINTER :: f
    integer,intent(out) :: hbonds
    integer :: n,ires,jres,da,h,kres
    n = 0
    ILOOP: do ires=1,geofold_nres
      if (f%iflag(ires)==".") cycle ILOOP
      do da=1,2
        do h = 1, size(geofold_hb, 2)
          jres = geofold_hb(da,h) 
          if (jres/=ires) cycle
          kres = geofold_hb((2/da),h) !kres is the acceptor/donor residue where ires is the donor/acceptor          
          if (f%iflag(kres)==".") cycle
          if (any(f%barrel/=0)) then
            !! diagnostic
            ! write(*,*) "Calling _inseam from geofold_hbonds_get"
            if (geofold_pivots_inseam(f, ires,kres)) cycle
          endif
          n = n + 1
        enddo
      enddo
    enddo ILOOP
    hbonds = n/2   ! because every H-bond is counted twice !
  end subroutine geofold_hbonds_get

 !!----------------------
 !! read Hbonds file
 SUBROUTINE geofold_hbonds_read(mfile)
  implicit none
  ! integer,intent(in) :: harg
  CHARACTER (len=*) :: mfile
  INTEGER :: res1, res2, ierr, dunit, n, ss, nhbonds = 0
  REAL :: engy, x
  CHARACTER (len=200) :: aline
  character :: bond !! "H" or "S" for Hbond or disulfide
  character(len=3) :: datom,aatom
  integer :: minres, maxres
  dunit = 34
  minres = 999
  maxres = -999
  ! call getarg(harg, mfile)
  if (allocated(geofold_hb)) deallocate(geofold_hb)
  allocate(geofold_ss(geofold_nres),stat=ierr)
  if (ierr/=0) stop 'read_hbonds:: error allocating geofold_ss'
  dunit = pickunit(dunit)
  open(dunit, file = mfile, iostat=ierr, status="old", form="formatted")
  IF (ierr /= 0 ) STOP "geofold:: read_hbondfile:  error opening file!"
  
  !added by B. Walcott May 7 2014
  do 
    read(dunit, '(a)', iostat=ierr) aline
    if(ierr/=0) exitif(aline(1:1)=='!') cycle
    read(aline,*, iostat=ierr) res1, datom, res2, aatom, bond
    if(ierr/=0) stop 'Error parsing H-bond'
    if (bond == "H" .or. bond == "h") then
      nhbonds = nhbonds+1
    endif
  enddo
  allocate(geofold_hb(2,nhbonds),stat=ierr)
  if(ierr/=0) stop 'read_hbonds:: error allocating geofold_hb'
  rewind(dunit)
  
  
  
  geofold_hb = 0.
  geofold_ss = 0.
  n = 0
  ss = 0
  DO
     !! res1 is donor, res2 is acceptor
     !! geofold_hbond_hb(1,i) is donor to i
     !! geofold_hbond_hb(2,i) is acceptor to i
     !! i is the hydrogen bond number
     read(dunit,'(a)',iostat=ierr) aline
     IF (ierr /=0) EXIT
     if (aline(1:1)=='!') cycle

     read(aline,*, iostat=ierr) res1, datom, res2, aatom, bond ! currently engy is ignored.

     IF (ierr /=0) EXIT
     select case (bond)
     case ("H","h") 
       n = n + 1
       geofold_hb(1, n) = res1
       geofold_hb(2, n) = res2
       n = n + 1
     case ("S","s")
       geofold_ss(res1) = res2
       geofold_ss(res2) = res1
       ss = ss + 1
     end select
     if (res1 < minres) minres = res1
     if (res2 < minres) minres = res2
     if (res1 > maxres) maxres = res1
     if (res2 > maxres) maxres = res2
  END DO
  close(dunit) ! close hbonds file
  write(*,'("Number of HBONDs read from ",a,i8)') trim(mfile), n
  write(*,'("Number of SS-bonds read from ",a,i8)') trim(mfile), ss
  write(*,'("HBOND contact data found for residue range ",2i8)') minres, maxres
  write(*,'("Last Hbond  ",2i8,f9.4)') res1,res2,engy
END SUBROUTINE geofold_hbonds_read

!!====================================================================================
  subroutine geofold_hbonds_cleanup()
    if (allocated(geofold_hb)) deallocate(geofold_hb)
    if (allocated(geofold_ss)) deallocate(geofold_ss)
  end subroutine geofold_hbonds_cleanup
!!====================================================================================
end MODULE geofold_hbonds
